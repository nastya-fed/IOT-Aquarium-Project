#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>
#include <WiFiUdp.h>
#include <NTPClient.h>

const char* ssid = "";
const char* password = "";
const char* BOT_TOKEN = "";

WiFiClientSecure secured_client;
UniversalTelegramBot bot(BOT_TOKEN, secured_client);
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 3 * 3600, 60000);

unsigned long lastCheckTime = 0; //–∫–æ–≥–¥–∞ –ø–æ—Å–ª —Ä–∞–∑ –æ–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Ç–≥

int scheduledHour = -1, scheduledMinute = -1; //–≤—Ä–µ–º—è –≤–∫–ª —Å–≤–µ—Ç–∞
bool triggeredToday = false; //—Å–≤–µ—Ç –≤–∫–ª —É–∂–µ —Å–µ–≥–æ–¥–Ω—è

int scheduledOffHour = -1, scheduledOffMinute = -1; //–≤—Ä–µ–º—è –≤—ã–∫–ª —Å–≤–µ—Ç–∞
bool offTriggeredToday = false; //—Å–≤–µ—Ç –≤—ã–∫–ª —É–∂–µ —Å–µ–≥–æ–¥–Ω—è

String lastChatId = ""; //–ø–æ—Å–ª —á–∞—Ç –¥–ª—è –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π

//////
struct FeedTime {
  int hour;
  int minute;
};

FeedTime scheduledFeedTimes[5][2];  // –º—Å–≤ –≤—Ä–µ–º—è –∫–æ—Ä–º–ª–µ–Ω–∏—è
int numScheduledFeedTimes = 0;      // –∫–æ–ª-–≤–æ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω –∫–æ—Ä–º–ª–µ–Ω–∏—è
//////

bool autoTempEnabled = false; //–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏ —Ç–µ–º–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
unsigned long lastTempSentTime = 0; //–∫–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ—Å–ª —Ä–∞–∑ —Ç–µ–º–ø

void setup() {
  Serial.begin(9600);
  delay(500);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) delay(1000);
  secured_client.setInsecure();
  timeClient.begin();
}

String readFromArduino() {

  String input = "";
  unsigned long startTime = millis();
  while (millis() - startTime < 1000) {
    while (Serial.available()) {

      char c = Serial.read();
      if (c == '\n') {

        input.trim();
        return input;

      }
      input += c;

    }
    delay(10);
  }
  return "";

}

void loop() {

  timeClient.update();

  if (millis() - lastCheckTime > 2000) {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

    while (numNewMessages) {

      for (int i = 0; i < numNewMessages; i++) {

        String text = bot.messages[i].text;
        String chat_id = bot.messages[i].chat_id;
        lastChatId = chat_id;

        if (text == "/lighton") {
          bot.sendMessage(chat_id, "–°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω", "");
          Serial.println("CMD:ON");

        } else if (text == "/lightoff") {
          bot.sendMessage(chat_id, "–°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", "");
          Serial.println("CMD:OFF");

        } else if (text.startsWith("/setlighton")) {//—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–≤—Ç–æ–≤–∫–ª —Å–≤–µ—Ç–∞

          String timeStr = text.substring(12);
          int sep = timeStr.indexOf(':');
          if (sep != -1) {

            int hour = timeStr.substring(0, sep).toInt();
            int minute = timeStr.substring(sep + 1).toInt();
            if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60) {

              scheduledHour = hour;
              scheduledMinute = minute;
              triggeredToday = false;
              bot.sendMessage(chat_id, "–í—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è: " + timeStr, "");
            
            } else {
              bot.sendMessage(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (0‚Äì23:0‚Äì59)", "");
            }
          } else {
            bot.sendMessage(chat_id, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /set HH:MM", "");
          }

        } else if (text.startsWith("/setlightoff")) { //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–≤—Ç–æ–≤—ã–∫–ª —Å–≤–µ—Ç–∞

          String timeStr = text.substring(13);
          int sep = timeStr.indexOf(':');
          if (sep != -1) {

            int hour = timeStr.substring(0, sep).toInt();
            int minute = timeStr.substring(sep + 1).toInt();
            if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60) {

              scheduledOffHour = hour;
              scheduledOffMinute = minute;
              offTriggeredToday = false;
              bot.sendMessage(chat_id, "–í—Ä–µ–º—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è: " + timeStr, "");

            } else {
              bot.sendMessage(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (0‚Äì23:0‚Äì59)", "");
            }
          } else {
            bot.sendMessage(chat_id, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /setoff HH:MM", "");
          }

        } else if (text.startsWith("/setfood ")) { //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–≤—Ç–æ–∫–æ—Ä–º–ª–µ–Ω–∏—è

          String feedTimesStr = text.substring(9); 
          numScheduledFeedTimes = 0;             

          int startIndex = 0;
          while (startIndex < feedTimesStr.length() && numScheduledFeedTimes < 5) {

            int endIndex = feedTimesStr.indexOf(' ', startIndex);
            if (endIndex == -1) endIndex = feedTimesStr.length();

            String timeStr = feedTimesStr.substring(startIndex, endIndex);
            int sep = timeStr.indexOf(':');

            if (sep != -1) {

              int hour = timeStr.substring(0, sep).toInt();
              int minute = timeStr.substring(sep + 1).toInt();
              
              if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60) {

                scheduledFeedTimes[numScheduledFeedTimes][0].hour = hour;
                scheduledFeedTimes[numScheduledFeedTimes][0].minute = minute;
                scheduledFeedTimes[numScheduledFeedTimes][1].hour = 0; 
                numScheduledFeedTimes++;

              }

            }

            startIndex = endIndex + 1;

          }

          bot.sendMessage(chat_id, "–í—Ä–µ–º—è –∫–æ—Ä–º–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", "");

        } else if (text == "/feed") { //–∫–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ

          bot.sendMessage(chat_id, "–†—ã–±–∫–∏ –∫—É—à–∞—é—Ç! üê†", "");
          Serial.println("CMD:FEED");

        } else if (text == "/temp") { //–∏–∑–º–µ—Ä—è–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É

          Serial.println("CMD:TEMP");  
          delay(500);                
          String tempResponse = readFromArduino();
          if (tempResponse.startsWith("TEMP:")) {

            bot.sendMessage(chat_id, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã: " + tempResponse.substring(5) + " ¬∞C", "");

          } else {
            bot.sendMessage(chat_id, "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É", "");
          }

        } else if (text == "/autotemp") {

          autoTempEnabled = true;
          bot.sendMessage(chat_id, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤–∫–ª—é—á–µ–Ω–∞", "");

        } else if (text == "/stoptemp") {

          autoTempEnabled = false;
          bot.sendMessage(chat_id, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞", "");

        } else {

          bot.sendMessage(chat_id,
                          "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–≤–æ–∏–º —É–º–Ω—ã–º –∞–∫–≤–∞—Ä–∏—É–º–æ–º\n\n"
                          "    –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n"
                          "    /temp - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É\n"
                          "    /autotemp - –ù–∞—á–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É\n"
                          "    /stoptemp - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã\n\n"
                          "    –ö–æ—Ä–º–ª–µ–Ω–∏–µ:\n"
                          "    /feed - –ü–æ–∫–æ—Ä–º–∏—Ç—å —Ä—ã–±–æ–∫ –≤—Ä—É—á–Ω—É—é\n"
                          "    /setfood HH:MM HH:MM HH:MM - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è\n\n"
                          "    –°–≤–µ—Ç:\n"
                          "    /lighton - –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç\n"
                          "    /lightoff - –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç\n"
                          "    /setlighton HH:MM - –í–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é\n"
                          "    /setlightoff HH:MM - –í—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é",
                          "");

        }
      }
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
    lastCheckTime = millis();

  }

  // –±–ª–æ–∫ –∞–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  int currentHour = timeClient.getHours();
  int currentMinute = timeClient.getMinutes();
 

  if (scheduledHour == currentHour && scheduledMinute == currentMinute && !triggeredToday) {

    Serial.println("CMD:ON");
    triggeredToday = true;
    if (lastChatId != "") bot.sendMessage(lastChatId, "–ê–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: —Å–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω", "");

  }
 
  if (scheduledOffHour == currentHour && scheduledOffMinute == currentMinute && !offTriggeredToday) {

    Serial.println("CMD:OFF");
    offTriggeredToday = true;
    if (lastChatId != "") bot.sendMessage(lastChatId, "–ê–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: —Å–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", "");

  }

  // –∞–≤—Ç–æ–∫–æ—Ä–º–ª–µ–Ω–∏–µ
  for (int i = 0; i < numScheduledFeedTimes; i++) {

    int h = scheduledFeedTimes[i][0].hour;
    int m = scheduledFeedTimes[i][0].minute;
    int fed = scheduledFeedTimes[i][1].hour;

    if (h == currentHour && m == currentMinute && fed == 0) {

      Serial.println("CMD:FEED");
      Serial.println("feed");
      scheduledFeedTimes[i][1].hour = 1;  // –ø–æ–∫–æ—Ä–º–∏–ª–∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –∏ –æ—Ç–º–µ—Ç–∏–ª–∏ —ç—Ç–æ
      if (lastChatId != "") bot.sendMessage(lastChatId, "–ê–≤—Ç–æ–∫–æ—Ä–º–ª–µ–Ω–∏–µ: —Ä—ã–±–∫–∏ –∫—É—à–∞—é—Ç!", "");
      break;

    }

  }

  // –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∫–∞–∂–¥—É—é —Å–µ–∫
  if (autoTempEnabled && millis() - lastTempSentTime >= 1000) {

    Serial.println("CMD:TEMP");
    delay(100);
    String tempResponse = readFromArduino();

    if (tempResponse.startsWith("TEMP:") && lastChatId != "") {

      bot.sendMessage(lastChatId, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã: " + tempResponse.substring(5) + " ¬∞C", "");

    }

    lastTempSentTime = millis();

  }

  // —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–æ–≤ —Å–≤–µ—Ç–∞ –∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è
  if (currentHour == 0 && currentMinute == 0) {

    triggeredToday = false;
    offTriggeredToday = false;

    for (int i = 0; i < numScheduledFeedTimes; i++) {
      scheduledFeedTimes[i][1].hour = 0;
    }

  }

  delay(1000);
}
